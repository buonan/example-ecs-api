version: '3.9'

services:
  api:
    image: api
    ports:
      - 3000:3000
    networks:
      - frontend
      - backend
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_BROKERS: kafka1:9092,kafka2:9092,kafka3:9092

  worker-health:
    image: worker:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - kafka3
    environment:
      TOPIC: health
      KAFKA_BROKERS: kafka1:9092,kafka2:9092,kafka3:9092
    networks:
      - backend

  worker-writer:
    image: worker:latest
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
    depends_on:
      - mongo
      - kafka1
      - kafka2
      - kafka3
    environment:
      TOPIC: writer
      KAFKA_BROKERS: kafka1:9092,kafka2:9092,kafka3:9092
    networks:
      - backend

  mongo:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27017:27017
      - 28017:28017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_db:/data/db
    networks:
      - backend

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - 8082:8081
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - backend

  zoo1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo1
    container_name: zoo1
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    volumes:
      - zoo_data_1:/var/lib/zookeeper/data
      - zoo_log_1:/var/lib/zookeeper/log
    networks:
      - backend

  zoo2:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo2
    container_name: zoo2
    restart: unless-stopped
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    volumes:
      - zoo_data_2:/var/lib/zookeeper/data
      - zoo_log_2:/var/lib/zookeeper/log
    networks:
      - backend

  zoo3:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo3
    container_name: zoo3
    restart: unless-stopped
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    volumes:
      - zoo_data_3:/var/lib/zookeeper/data
      - zoo_log_3:/var/lib/zookeeper/log
    networks:
      - backend

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    restart: unless-stopped
    ports:
      - "9096:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_JMX_PORT: 9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - kafka_data_1:/var/lib/kafka/data
    networks:
      - backend

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    restart: unless-stopped
    ports:
      - "9095:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_JMX_PORT: 9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
    volumes:
      - kafka_data_2:/var/lib/kafka/data
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - backend

  kafka3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka3
    container_name: kafka3
    restart: unless-stopped
    ports:
      - "9094:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_JMX_PORT: 9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 5
    volumes:
      - kafka_data_3:/var/lib/kafka/data
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - backend

  kafka-manager:
      image: hlebalbau/kafka-manager:latest
      depends_on:
        - zoo1
        - zoo2
        - zoo3
      environment:
        - ZK_HOSTS=zoo1:2181,zoo2:2181,zoo3:2181
        - APPLICATION_SECRET=letmein
      ports:
        - 9000:9000
      networks:
        - backend

networks:
  frontend:
  backend:

volumes:
  mongo_db:
  kafka_data_1:
  kafka_data_2:
  kafka_data_3:
  zoo_data_1:
  zoo_log_1:
  zoo_data_2:
  zoo_log_2:
  zoo_data_3:
  zoo_log_3: